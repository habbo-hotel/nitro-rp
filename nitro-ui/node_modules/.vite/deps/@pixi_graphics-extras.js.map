{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawTorus.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawChamferRect.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawFilletRect.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawRegularPolygon.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawRoundedPolygon.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/node_modules/tslib/tslib.es6.js", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/drawStar.ts", "../../../../node_modules/.pnpm/@pixi+graphics-extras@6.5.10_@pixi+graphics@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/graphics-extras/src/index.ts"],
  "sourcesContent": ["import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw a torus shape, like a donut. Can be used for something like a circle loader.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawTorus\n * @param this\n * @param {number} x - X position\n * @param {number} y - Y position\n * @param {number} innerRadius - Inner circle radius\n * @param {number} outerRadius - Outer circle radius\n * @param {number} [startArc=0] - Where to begin sweep, in radians, 0.0 = to the right\n * @param {number} [endArc=Math.PI*2] - Where to end sweep, in radians\n * @returns {PIXI.Graphics} This Graphics object. Good for chaining method calls\n */\nexport function drawTorus(this: Graphics,\n    x: number,\n    y: number,\n    innerRadius: number,\n    outerRadius: number,\n    startArc = 0,\n    endArc: number = Math.PI * 2): Graphics\n{\n    if (Math.abs(endArc - startArc) >= Math.PI * 2)\n    {\n        return this\n            .drawCircle(x, y, outerRadius)\n            .beginHole()\n            .drawCircle(x, y, innerRadius)\n            .endHole();\n    }\n\n    this.finishPoly();\n    this\n        .arc(x, y, innerRadius, endArc, startArc, true)\n        .arc(x, y, outerRadius, startArc, endArc, false)\n        .finishPoly();\n\n    return this;\n}\n", "import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw Rectangle with chamfer corners. These are angled corners.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawChamferRect\n * @param this\n * @param {number} x - Upper left corner of rect\n * @param {number} y - Upper right corner of rect\n * @param {number} width - Width of rect\n * @param {number} height - Height of rect\n * @param {number} chamfer - non-zero real number, size of corner cutout\n * @returns {PIXI.Graphics} Returns self.\n */\nexport function drawChamferRect(this: Graphics,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    chamfer: number): Graphics\n{\n    if (chamfer <= 0)\n    {\n        return this.drawRect(x, y, width, height);\n    }\n\n    const inset = Math.min(chamfer, Math.min(width, height) / 2);\n    const right = x + width;\n    const bottom = y + height;\n    const points = [\n        x + inset, y,\n        right - inset, y,\n        right, y + inset,\n        right, bottom - inset,\n        right - inset, bottom,\n        x + inset, bottom,\n        x, bottom - inset,\n        x, y + inset,\n    ];\n\n    // Remove overlapping points\n    for (let i = points.length - 1; i >= 2; i -= 2)\n    {\n        if (points[i] === points[i - 2] && points[i - 1] === points[i - 3])\n        {\n            points.splice(i - 1, 2);\n        }\n    }\n\n    return this.drawPolygon(points);\n}\n", "import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw Rectangle with fillet corners. This is much like rounded rectangle\n * however it support negative numbers as well for the corner radius.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawFilletRect\n * @param this\n * @param {number} x - Upper left corner of rect\n * @param {number} y - Upper right corner of rect\n * @param {number} width - Width of rect\n * @param {number} height - Height of rect\n * @param {number} fillet - accept negative or positive values\n * @returns {PIXI.Graphics} Returns self.\n */\nexport function drawFilletRect(this: Graphics,\n    x: number,\n    y: number,\n    width: number,\n    height: number,\n    fillet: number): Graphics\n{\n    if (fillet === 0)\n    {\n        return this.drawRect(x, y, width, height);\n    }\n\n    const maxFillet = Math.min(width, height) / 2;\n    const inset = Math.min(maxFillet, Math.max(-maxFillet, fillet));\n    const right = x + width;\n    const bottom = y + height;\n    const dir = inset < 0 ? -inset : 0;\n    const size = Math.abs(inset);\n\n    return this\n        .moveTo(x, y + size)\n        .arcTo(x + dir, y + dir, x + size, y, size)\n        .lineTo(right - size, y)\n        .arcTo(right - dir, y + dir, right, y + size, size)\n        .lineTo(right, bottom - size)\n        .arcTo(right - dir, bottom - dir, x + width - size, bottom, size)\n        .lineTo(x + size, bottom)\n        .arcTo(x + dir, bottom - dir, x, bottom - size, size)\n        .closePath();\n}\n", "import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw a regular polygon where all sides are the same length.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawRegularPolygon\n * @param this\n * @param {number} x - X position\n * @param {number} y - Y position\n * @param {number} radius - Polygon radius\n * @param {number} sides - Minimum value is 3\n * @param {number} rotation - Starting rotation values in radians..\n * @returns {PIXI.Graphics} This Graphics object. Good for chaining method calls\n */\nexport function drawRegularPolygon(this: Graphics,\n    x: number,\n    y: number,\n    radius: number,\n    sides: number,\n    rotation = 0): Graphics\n{\n    sides = Math.max(sides | 0, 3);\n    const startAngle = (-1 * Math.PI / 2) + rotation;\n    const delta = (Math.PI * 2) / sides;\n    const polygon = [];\n\n    for (let i = 0; i < sides; i++)\n    {\n        const angle = (i * delta) + startAngle;\n\n        polygon.push(\n            x + (radius * Math.cos(angle)),\n            y + (radius * Math.sin(angle))\n        );\n    }\n\n    return this.drawPolygon(polygon);\n}\n", "import type { Graphics } from '@pixi/graphics';\n\n/**\n * Draw a regular polygon with rounded corners.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawRoundedPolygon\n * @param this\n * @param {number} x - X position\n * @param {number} y - Y position\n * @param {number} radius - Polygon radius\n * @param {number} sides - Minimum value is 3\n * @param {number} corner - Corner size in pixels.\n * @param {number} rotation - Starting rotation values in radians..\n * @returns {PIXI.Graphics} This Graphics object. Good for chaining method calls\n */\nexport function drawRoundedPolygon(this: Graphics,\n    x: number,\n    y: number,\n    radius: number,\n    sides: number,\n    corner: number,\n    rotation = 0): Graphics\n{\n    sides = Math.max((sides | 0), 3);\n\n    if (corner <= 0)\n    {\n        return this.drawRegularPolygon(x, y, radius, sides, rotation);\n    }\n\n    const sideLength = (radius * Math.sin(Math.PI / sides)) - 0.001;\n\n    corner = Math.min(corner, sideLength);\n\n    const startAngle = (-1 * Math.PI / 2) + rotation;\n    const delta = (Math.PI * 2) / sides;\n    const internalAngle = ((sides - 2) * Math.PI) / sides / 2;\n\n    for (let i = 0; i < sides; i++)\n    {\n        const angle = (i * delta) + startAngle;\n        const x0 = x + (radius * Math.cos(angle));\n        const y0 = y + (radius * Math.sin(angle));\n        const a1 = angle + (Math.PI) + internalAngle;\n        const a2 = angle - (Math.PI) - internalAngle;\n        const x1 = x0 + (corner * Math.cos(a1));\n        const y1 = y0 + (corner * Math.sin(a1));\n        const x3 = x0 + (corner * Math.cos(a2));\n        const y3 = y0 + (corner * Math.sin(a2));\n\n        if (i === 0)\n        {\n            this.moveTo(x1, y1);\n        }\n        else\n        {\n            this.lineTo(x1, y1);\n        }\n        this.quadraticCurveTo(x0, y0, x3, y3);\n    }\n\n    return this.closePath();\n}\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n", "import type { Graphics } from '@pixi/graphics';\nimport { Polygon, PI_2 } from '@pixi/math';\n\n/**\n * Draw a star shape with an arbitrary number of points.\n * @ignore\n */\nclass Star extends Polygon\n{\n    /**\n     * @param x - Center X position of the star\n     * @param y - Center Y position of the star\n     * @param points - The number of points of the star, must be > 1\n     * @param radius - The outer radius of the star\n     * @param innerRadius - The inner radius between points, default half `radius`\n     * @param rotation - The rotation of the star in radians, where 0 is vertical\n     */\n    constructor(x: number, y: number, points: number, radius: number, innerRadius?: number, rotation = 0)\n    {\n        innerRadius = innerRadius || radius / 2;\n\n        const startAngle = (-1 * Math.PI / 2) + rotation;\n        const len = points * 2;\n        const delta = PI_2 / len;\n        const polygon = [];\n\n        for (let i = 0; i < len; i++)\n        {\n            const r = i % 2 ? innerRadius : radius;\n            const angle = (i * delta) + startAngle;\n\n            polygon.push(\n                x + (r * Math.cos(angle)),\n                y + (r * Math.sin(angle))\n            );\n        }\n\n        super(polygon);\n    }\n}\n\n/**\n * Draw a star shape with an arbitrary number of points.\n *\n * _Note: Only available with **@pixi/graphics-extras**._\n * @method PIXI.Graphics#drawStar\n * @param this\n * @param x - Center X position of the star\n * @param y - Center Y position of the star\n * @param points - The number of points of the star, must be > 1\n * @param radius - The outer radius of the star\n * @param innerRadius - The inner radius between points, default half `radius`\n * @param rotation - The rotation of the star in radians, where 0 is vertical\n * @returns - This Graphics object. Good for chaining method calls\n */\nexport function drawStar(this: Graphics,\n    x: number,\n    y: number,\n    points: number,\n    radius: number,\n    innerRadius: number,\n    rotation = 0): Graphics\n{\n    return this.drawPolygon(new Star(x, y, points, radius, innerRadius, rotation) as Polygon);\n}\n", "import { Graphics } from '@pixi/graphics';\nimport { drawTorus } from './drawTorus';\nimport { drawChamferRect } from './drawChamferRect';\nimport { drawFilletRect } from './drawFilletRect';\nimport { drawRegularPolygon } from './drawRegularPolygon';\nimport { drawRoundedPolygon } from './drawRoundedPolygon';\nimport { drawStar } from './drawStar';\n\nexport interface IGraphicsExtras\n{\n    drawTorus: typeof drawTorus;\n    drawChamferRect: typeof drawChamferRect;\n    drawFilletRect: typeof drawFilletRect;\n    drawRegularPolygon: typeof drawRegularPolygon;\n    drawRoundedPolygon: typeof drawRoundedPolygon;\n    drawStar: typeof drawStar;\n}\n\n// Assign extras to Graphics\nObject.defineProperties(Graphics.prototype, {\n    drawTorus: { value: drawTorus },\n    drawChamferRect: { value: drawChamferRect },\n    drawFilletRect: { value: drawFilletRect },\n    drawRegularPolygon: { value: drawRegularPolygon },\n    drawRoundedPolygon: { value: drawRoundedPolygon },\n    drawStar: { value: drawStar },\n});\n"],
  "mappings": "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",
  "names": ["d", "b", "Star"]
}
