{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@pixi+mixin-get-child-by-name@6.5.10_@pixi+display@6.5.10/node_modules/@pixi/mixin-get-child-by-name/src/index.ts"],
  "sourcesContent": ["import { DisplayObject, Container } from '@pixi/display';\n\n/**\n * The instance name of the object.\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\nDisplayObject.prototype.name = null;\n\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @returns {PIXI.DisplayObject} The child with the specified name.\n */\nContainer.prototype.getChildByName = function getChildByName<T extends DisplayObject = DisplayObject>(\n    name: string,\n    deep?: boolean,\n): T\n{\n    for (let i = 0, j = this.children.length; i < j; i++)\n    {\n        if (this.children[i].name === name)\n        {\n            return this.children[i];\n        }\n    }\n\n    if (deep)\n    {\n        for (let i = 0, j = this.children.length; i < j; i++)\n        {\n            const child = (this.children[i] as Container);\n\n            if (!child.getChildByName)\n            {\n                continue;\n            }\n\n            const target = child.getChildByName<T>(name, true);\n\n            if (target)\n            {\n                return target;\n            }\n        }\n    }\n\n    return null;\n};\n"],
  "mappings": ";;;;;;;;;;;AAOA,cAAc,UAAU,OAAO;AAY/B,UAAU,UAAU,iBAAiB,SAAS,eAC1C,MACA,MAAc;AAGd,WAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KACjD;AACI,QAAI,KAAK,SAAS,CAAC,EAAE,SAAS,MAC9B;AACI,aAAO,KAAK,SAAS,CAAC;IACzB;EACJ;AAED,MAAI,MACJ;AACI,aAAS,IAAI,GAAG,IAAI,KAAK,SAAS,QAAQ,IAAI,GAAG,KACjD;AACI,UAAM,QAAS,KAAK,SAAS,CAAC;AAE9B,UAAI,CAAC,MAAM,gBACX;AACI;MACH;AAED,UAAM,SAAS,MAAM,eAAkB,MAAM,IAAI;AAEjD,UAAI,QACJ;AACI,eAAO;MACV;IACJ;EACJ;AAED,SAAO;AACX;",
  "names": []
}
