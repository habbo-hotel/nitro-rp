{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/@pixi+mixin-get-global-position@6.5.10_@pixi+display@6.5.10_@pixi+math@6.5.10/node_modules/@pixi/mixin-get-global-position/src/index.ts"],
  "sourcesContent": ["import { DisplayObject } from '@pixi/display';\nimport { Point } from '@pixi/math';\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @returns {PIXI.Point} The updated point.\n */\nDisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point: Point = new Point(), skipUpdate = false): Point\n{\n    if (this.parent)\n    {\n        this.parent.toGlobal(this.position, point, skipUpdate);\n    }\n    else\n    {\n        point.x = this.position.x;\n        point.y = this.position.y;\n    }\n\n    return point;\n};\n"],
  "mappings": ";;;;;;;;;;;;AAaA,cAAc,UAAU,oBAAoB,SAAS,kBAAkB,OAA4B,YAAkB;AAA9C,MAAA,UAAA,QAAA;AAAA,YAAmB,IAAA,MAAK;EAAE;AAAE,MAAA,eAAA,QAAA;AAAA,iBAAkB;EAAA;AAEjH,MAAI,KAAK,QACT;AACI,SAAK,OAAO,SAAS,KAAK,UAAU,OAAO,UAAU;EACxD,OAED;AACI,UAAM,IAAI,KAAK,SAAS;AACxB,UAAM,IAAI,KAAK,SAAS;EAC3B;AAED,SAAO;AACX;",
  "names": []
}
