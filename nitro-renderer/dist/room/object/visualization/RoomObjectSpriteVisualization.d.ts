import { RenderTexture } from '@pixi/core';
import { Rectangle } from '@pixi/math';
import { IGraphicAssetCollection, IObjectVisualizationData, IRoomGeometry, IRoomObjectController, IRoomObjectSprite, IRoomObjectSpriteVisualization, RoomObjectSpriteData } from '../../../api';
export declare class RoomObjectSpriteVisualization implements IRoomObjectSpriteVisualization {
    private static VISUALIZATION_COUNTER;
    private _id;
    private _object;
    private _asset;
    private _sprites;
    protected _scale: number;
    private _updateObjectCounter;
    private _updateModelCounter;
    private _updateSpriteCounter;
    constructor();
    initialize(data: IObjectVisualizationData): boolean;
    update(geometry: IRoomGeometry, time: number, update: boolean, skipUpdate: boolean): void;
    protected reset(): void;
    dispose(): void;
    getSprite(index: number): IRoomObjectSprite;
    getSpriteList(): RoomObjectSpriteData[];
    createSprite(): IRoomObjectSprite;
    createSpriteAtIndex(index: number): IRoomObjectSprite;
    protected createSprites(count: number): void;
    get image(): RenderTexture;
    getImage(bgColor: number, originalId: number): RenderTexture;
    getBoundingRectangle(): Rectangle;
    get instanceId(): number;
    get object(): IRoomObjectController;
    set object(object: IRoomObjectController);
    get asset(): IGraphicAssetCollection;
    set asset(asset: IGraphicAssetCollection);
    get sprites(): IRoomObjectSprite[];
    get totalSprites(): number;
    get updateObjectCounter(): number;
    set updateObjectCounter(count: number);
    get updateModelCounter(): number;
    set updateModelCounter(count: number);
    get updateSpriteCounter(): number;
    set updateSpriteCounter(count: number);
    get spriteCount(): number;
}
