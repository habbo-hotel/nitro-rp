import { Filter, Resource, Texture } from '@pixi/core';
import { Container } from '@pixi/display';
import { IRoomObjectSprite } from '../../../api';
export declare class RoomObjectSprite implements IRoomObjectSprite {
    private static SPRITE_COUNTER;
    private _id;
    private _name;
    private _type;
    private _spriteType;
    private _texture;
    private _container;
    private _width;
    private _height;
    private _offsetX;
    private _offsetY;
    private _flipH;
    private _flipV;
    private _direction;
    private _alpha;
    private _blendMode;
    private _color;
    private _relativeDepth;
    private _varyingDepth;
    private _libraryAssetName;
    private _clickHandling;
    private _visible;
    private _tag;
    private _posture;
    private _alphaTolerance;
    private _filters;
    private _updateCounter;
    private _updateContainer;
    constructor();
    dispose(): void;
    get id(): number;
    set id(id: number);
    get name(): string;
    set name(name: string);
    get type(): string;
    set type(type: string);
    get spriteType(): number;
    set spriteType(type: number);
    get texture(): Texture<Resource>;
    set texture(texture: Texture<Resource>);
    get container(): Container;
    set container(container: Container);
    get width(): number;
    get height(): number;
    get offsetX(): number;
    set offsetX(x: number);
    get offsetY(): number;
    set offsetY(y: number);
    get flipH(): boolean;
    set flipH(flip: boolean);
    get flipV(): boolean;
    set flipV(flip: boolean);
    get direction(): number;
    set direction(direction: number);
    get alpha(): number;
    set alpha(alpha: number);
    get blendMode(): number;
    set blendMode(blend: number);
    get color(): number;
    set color(color: number);
    get relativeDepth(): number;
    set relativeDepth(depth: number);
    get varyingDepth(): boolean;
    set varyingDepth(flag: boolean);
    get libraryAssetName(): string;
    set libraryAssetName(value: string);
    get clickHandling(): boolean;
    set clickHandling(flag: boolean);
    get visible(): boolean;
    set visible(visible: boolean);
    get tag(): string;
    set tag(tag: string);
    get posture(): string;
    set posture(posture: string);
    get alphaTolerance(): number;
    set alphaTolerance(tolerance: number);
    get filters(): Filter[];
    set filters(filters: Filter[]);
    get updateCounter(): number;
    get updateContainer(): boolean;
    set updateContainer(flag: boolean);
}
