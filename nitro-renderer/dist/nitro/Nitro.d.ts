import { Application, IApplicationOptions } from '@pixi/app';
import { IAvatarRenderManager, IEventDispatcher, ILinkEventTracker, INitroCommunicationManager, INitroCore, INitroLocalizationManager, IRoomCameraWidgetManager, IRoomEngine, IRoomManager, IRoomSessionManager, ISessionDataManager, ISoundManager } from '../api';
import { INitro } from './INitro';
import './Plugins';
export declare class Nitro implements INitro {
    static WEBGL_CONTEXT_LOST: string;
    static WEBGL_UNAVAILABLE: string;
    static READY: string;
    private static INSTANCE;
    private _application;
    private _core;
    private _events;
    private _communication;
    private _localization;
    private _avatar;
    private _roomEngine;
    private _sessionDataManager;
    private _roomSessionManager;
    private _roomManager;
    private _cameraManager;
    private _soundManager;
    private _linkTrackers;
    private _isReady;
    private _isDisposed;
    constructor(core: INitroCore, options?: IApplicationOptions);
    static bootstrap(): void;
    init(): void;
    dispose(): void;
    private onConfigurationLoadedEvent;
    private onRoomEngineReady;
    getConfiguration<T>(key: string, value?: T): T;
    getLocalization(key: string): string;
    getLocalizationWithParameter(key: string, parameter: string, replacement: string): string;
    getLocalizationWithParameters(key: string, parameters: string[], replacements: string[]): string;
    addLinkEventTracker(tracker: ILinkEventTracker): void;
    removeLinkEventTracker(tracker: ILinkEventTracker): void;
    createLinkEvent(link: string): void;
    private startSendingHeartBeat;
    private sendHeartBeat;
    get application(): Application;
    get core(): INitroCore;
    get events(): IEventDispatcher;
    get localization(): INitroLocalizationManager;
    get communication(): INitroCommunicationManager;
    get avatar(): IAvatarRenderManager;
    get roomEngine(): IRoomEngine;
    get sessionDataManager(): ISessionDataManager;
    get roomSessionManager(): IRoomSessionManager;
    get roomManager(): IRoomManager;
    get cameraManager(): IRoomCameraWidgetManager;
    get soundManager(): ISoundManager;
    get width(): number;
    get height(): number;
    get isReady(): boolean;
    get isDisposed(): boolean;
    static get instance(): INitro;
}
