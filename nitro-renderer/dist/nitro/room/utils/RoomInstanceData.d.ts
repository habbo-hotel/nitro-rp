import { IFurnitureStackingHeightMap, ILegacyWallGeometry, ISelectedRoomObjectData, ITileObjectMap } from '../../../api';
import { RoomCamera } from './RoomCamera';
import { RoomFurnitureData } from './RoomFurnitureData';
export declare class RoomInstanceData {
    private _roomId;
    private _modelName;
    private _legacyGeometry;
    private _tileObjectMap;
    private _roomCamera;
    private _selectedObject;
    private _placedObject;
    private _furnitureStackingHeightMap;
    private _floorStack;
    private _wallStack;
    private _mouseButtonCursorOwners;
    constructor(roomId: number);
    dispose(): void;
    setModelName(name: string): void;
    setSelectedObject(data: ISelectedRoomObjectData): void;
    setPlacedObject(data: ISelectedRoomObjectData): void;
    setFurnitureStackingHeightMap(heightMap: IFurnitureStackingHeightMap): void;
    addPendingFurnitureFloor(data: RoomFurnitureData): void;
    removePendingFunitureFloor(id: number): RoomFurnitureData;
    getPendingFurnitureFloor(id: number): RoomFurnitureData;
    getNextPendingFurnitureFloor(): RoomFurnitureData;
    addPendingFurnitureWall(data: RoomFurnitureData): void;
    removePendingFurnitureWall(id: number): RoomFurnitureData;
    getPendingFurnitureWall(id: number): RoomFurnitureData;
    getNextPendingFurnitureWall(): RoomFurnitureData;
    addButtonMouseCursorOwner(k: string): boolean;
    removeButtonMouseCursorOwner(k: string): boolean;
    hasButtonMouseCursorOwners(): boolean;
    get roomId(): number;
    get modelName(): string;
    get legacyGeometry(): ILegacyWallGeometry;
    get tileObjectMap(): ITileObjectMap;
    get roomCamera(): RoomCamera;
    get selectedObject(): ISelectedRoomObjectData;
    get placedObject(): ISelectedRoomObjectData;
    get furnitureStackingHeightMap(): IFurnitureStackingHeightMap;
}
