import { IObjectVisualizationData } from '../../../../../api';
import { AnimationStateData } from '../data';
import { FurnitureAnimatedVisualizationData } from './FurnitureAnimatedVisualizationData';
import { FurnitureVisualization } from './FurnitureVisualization';
export declare class FurnitureAnimatedVisualization extends FurnitureVisualization {
    static TYPE: string;
    static DEFAULT_ANIMATION_ID: number;
    protected _state: number;
    protected _frameIncrease: number;
    private _animationData;
    private _animationScale;
    private _animationChangeTime;
    private _animatedLayerCount;
    private _directionChanged;
    constructor();
    initialize(data: IObjectVisualizationData): boolean;
    dispose(): void;
    protected get animatedLayerCount(): number;
    get animationId(): number;
    protected getAnimationId(animationData: AnimationStateData): number;
    protected updateObject(scale: number, direction: number): boolean;
    protected updateModel(scale: number): boolean;
    private isPlayingTransition;
    private getCurrentState;
    protected setAnimation(animationId: number): void;
    protected setSubAnimation(animationData: AnimationStateData, animationId: number, _arg_3?: boolean): boolean;
    protected getLastFramePlayed(layerId: number): boolean;
    protected resetAllAnimationFrames(): void;
    protected updateAnimation(scale: number): number;
    protected updateAnimations(scale: number): number;
    protected updateFramesForAnimation(animationData: AnimationStateData, scale: number): number;
    protected getFrameNumber(scale: number, layerId: number): number;
    protected getLayerXOffset(scale: number, direction: number, layerId: number): number;
    protected getLayerYOffset(scale: number, direction: number, layerId: number): number;
    protected usesAnimationResetting(): boolean;
    protected setDirection(direction: number): void;
    protected get frameIncrease(): number;
    protected get data(): FurnitureAnimatedVisualizationData;
}
