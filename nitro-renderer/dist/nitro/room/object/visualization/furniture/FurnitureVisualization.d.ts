import { IGraphicAsset, IObjectVisualizationData, IRoomGeometry, IRoomObjectSprite } from '../../../../../api';
import { RoomObjectSpriteVisualization } from '../../../../../room';
import { FurnitureVisualizationData } from './FurnitureVisualizationData';
export declare class FurnitureVisualization extends RoomObjectSpriteVisualization {
    protected static DEPTH_MULTIPLIER: number;
    static TYPE: string;
    protected _data: FurnitureVisualizationData;
    protected _type: string;
    protected _direction: number;
    protected _lastCameraAngle: number;
    protected _selectedColor: number;
    protected _furnitureLift: number;
    protected _alphaMultiplier: number;
    protected _alphaChanged: boolean;
    protected _clickUrl: string;
    protected _clickHandling: boolean;
    protected _cacheDirection: number;
    protected _cacheScale: number;
    protected _cacheSize: number;
    protected _layerCount: number;
    protected _shadowLayerIndex: number;
    protected _updatedLayers: boolean[];
    protected _assetNames: string[];
    protected _spriteTags: string[];
    protected _spriteInks: number[];
    protected _spriteAlphas: number[];
    protected _spriteColors: number[];
    protected _spriteMouseCaptures: boolean[];
    protected _spriteXOffsets: number[];
    protected _spriteYOffsets: number[];
    protected _spriteZOffsets: number[];
    private _animationNumber;
    constructor();
    initialize(data: IObjectVisualizationData): boolean;
    dispose(): void;
    protected reset(): void;
    protected resetLayers(scale: number, direction: number): void;
    update(geometry: IRoomGeometry, time: number, update: boolean, skipUpdate: boolean): void;
    protected updateObject(scale: number, direction: number): boolean;
    protected updateModel(scale: number): boolean;
    protected updateSprites(scale: number, update: boolean, animation: number): void;
    protected updateSprite(scale: number, layerId: number): void;
    protected getLibraryAssetNameForSprite(asset: IGraphicAsset, sprite: IRoomObjectSprite): string;
    protected getPostureForAssetFile(scale: number, _arg_2: string): string;
    private resetSprite;
    protected getSpriteAssetName(scale: number, layerId: number): string;
    protected cacheSpriteAssetName(scale: number, layerId: number, cache: boolean): string;
    protected getLayerTag(scale: number, direction: number, layerId: number): string;
    protected getLayerInk(scale: number, direction: number, layerId: number): number;
    protected getLayerAlpha(scale: number, direction: number, layerId: number): number;
    protected getLayerColor(scale: number, layerId: number, colorId: number): number;
    protected getLayerIgnoreMouse(scale: number, direction: number, layerId: number): boolean;
    protected getLayerXOffset(scale: number, direction: number, layerId: number): number;
    protected getLayerYOffset(scale: number, direction: number, layerId: number): number;
    protected getLayerZOffset(scale: number, direction: number, layerId: number): number;
    protected getValidSize(scale: number): number;
    protected setLayerCount(count: number): void;
    protected setDirection(direction: number): void;
    protected getAdditionalLayerCount(): number;
    protected updateAnimation(scale: number): number;
    protected getFrameNumber(scale: number, layerId: number): number;
    protected getPostureForAsset(scale: number, name: string): string;
    getAsset(name: string, layerId?: number): IGraphicAsset;
    protected get direction(): number;
    protected get data(): FurnitureVisualizationData;
}
