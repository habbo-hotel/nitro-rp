import { IRoomUserData } from '../../api';
export declare class RoomUserData implements IRoomUserData {
    private _roomIndex;
    private _name;
    private _type;
    private _sex;
    private _figure;
    private _custom;
    private _activityPoints;
    private _webID;
    private _groupID;
    private _groupStatus;
    private _groupName;
    private _ownerId;
    private _ownerName;
    private _petLevel;
    private _rarityLevel;
    private _hasSaddle;
    private _isRiding;
    private _canBreed;
    private _canHarvest;
    private _canRevive;
    private _hasBreedingPermission;
    private _botSkills;
    private _isModerator;
    constructor(k: number);
    get roomIndex(): number;
    get activityPoints(): number;
    set activityPoints(k: number);
    get name(): string;
    set name(k: string);
    get type(): number;
    set type(k: number);
    get sex(): string;
    set sex(k: string);
    get figure(): string;
    set figure(k: string);
    get custom(): string;
    set custom(k: string);
    get webID(): number;
    set webID(k: number);
    get groupId(): number;
    set groupId(groupId: number);
    get groupName(): string;
    set groupName(k: string);
    get groupStatus(): number;
    set groupStatus(k: number);
    get ownerId(): number;
    set ownerId(k: number);
    get ownerName(): string;
    set ownerName(k: string);
    get rarityLevel(): number;
    set rarityLevel(k: number);
    get hasSaddle(): boolean;
    set hasSaddle(k: boolean);
    get isRiding(): boolean;
    set isRiding(k: boolean);
    get canBreed(): boolean;
    set canBreed(k: boolean);
    get canHarvest(): boolean;
    set canHarvest(k: boolean);
    get canRevive(): boolean;
    set canRevive(k: boolean);
    get hasBreedingPermission(): boolean;
    set hasBreedingPermission(k: boolean);
    get petLevel(): number;
    set petLevel(k: number);
    get botSkills(): number[];
    set botSkills(k: number[]);
    get isModerator(): boolean;
    set isModerator(k: boolean);
}
