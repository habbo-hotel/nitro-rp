import { IFurnitureData } from '../../../api';
export declare class FurnitureData implements IFurnitureData {
    private _type;
    private _id;
    private _className;
    private _fullName;
    private _category;
    private _hasIndexedColor;
    private _colourIndex;
    private _revision;
    private _tileSizeX;
    private _tileSizeY;
    private _tileSizeZ;
    private _colors;
    private _localizedName;
    private _description;
    private _adUrl;
    private _purchaseOfferId;
    private _rentOfferId;
    private _customParams;
    private _specialType;
    private _purchaseCouldBeUsedForBuyout;
    private _rentCouldBeUsedForBuyout;
    private _availableForBuildersClub;
    private _canStandOn;
    private _canSitOn;
    private _canLayOn;
    private _excludedFromDynamic;
    private _furniLine;
    private _environment;
    private _rare;
    constructor(type: string, id: number, fullName: string, className: string, category: string, localizedName: string, description: string, revision: number, tileSizeX: number, tileSizeY: number, tileSizeZ: number, colors: number[], hadIndexedColor: boolean, colorIndex: number, adUrl: string, purchaseOfferId: number, purchaseCouldBeUsedForBuyout: boolean, rentOfferId: number, rentCouldBeUsedForBuyout: boolean, availableForBuildersClub: boolean, customParams: string, specialType: number, canStandOn: boolean, canSitOn: boolean, canLayOn: boolean, excludedfromDynamic: boolean, furniLine: string, environment: string, rare: boolean);
    get type(): string;
    get id(): number;
    get className(): string;
    set className(k: string);
    get fullName(): string;
    get category(): string;
    get hasIndexedColor(): boolean;
    get colorIndex(): number;
    get revision(): number;
    get tileSizeX(): number;
    get tileSizeY(): number;
    get tileSizeZ(): number;
    get colors(): number[];
    get name(): string;
    get description(): string;
    get adUrl(): string;
    get purchaseOfferId(): number;
    get customParams(): string;
    get specialType(): number;
    get rentOfferId(): number;
    get purchaseCouldBeUsedForBuyout(): boolean;
    get rentCouldBeUsedForBuyout(): boolean;
    get availableForBuildersClub(): boolean;
    get canStandOn(): boolean;
    get canSitOn(): boolean;
    get canLayOn(): boolean;
    get isExternalImage(): boolean;
    get excludeDynamic(): boolean;
    get furniLine(): string;
    get environment(): string;
    get rare(): boolean;
}
