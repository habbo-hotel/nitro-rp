import { IMessageDataWrapper } from '../../../../../../api';
export declare class AchievementData {
    static DISPLAY_METHOD_OBSOLETE: number;
    static DISPLAY_METHOD_SHOW_LEVEL_PROGRESS: number;
    static DISPLAY_METHOD_NEVER_SHOW_PROGRESS: number;
    static DISPLAY_METHOD_SHOW_TOTAL_PROGRESS: number;
    private _achievementId;
    private _level;
    private _badgeId;
    private _scoreAtStartOfLevel;
    private _scoreLimit;
    private _levelRewardPoints;
    private _levelRewardPointType;
    private _currentPoints;
    private _finalLevel;
    private _category;
    private _subCategory;
    private _levelCount;
    private _displayMethod;
    private _unseen;
    constructor(wrapper: IMessageDataWrapper);
    get achievementId(): number;
    get badgeId(): string;
    get level(): number;
    get scoreAtStartOfLevel(): number;
    get scoreLimit(): number;
    get levelRewardPoints(): number;
    get levelRewardPointType(): number;
    get currentPoints(): number;
    get finalLevel(): boolean;
    get category(): string;
    get subCategory(): string;
    get levelCount(): number;
    get firstLevelAchieved(): boolean;
    setMaxProgress(): void;
    get displayMethod(): number;
    get progress(): number;
    get toNextProgress(): number;
    set unseen(unseen: number);
    get unseen(): number;
    reset(badge: AchievementData): void;
}
